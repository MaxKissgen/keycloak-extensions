{"version":3,"sources":["../../../src/app/content/learning-layers-account/ManageClientPage.tsx"],"names":["React","AccountServiceContext","ContentPage","withRouter","Msg","ManageClient","Component","constructor","props","context","match","params","id","undefined","state","clientId","render","console","log","localize","ManageClientPage"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ;AACA,SAAQC,qBAAR;AACA,SAAQC,WAAR;AACA,SAAQC,UAAR;AACA,SAAQC,GAAR;AAcA,OAAO,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA6E;AAKzEC,EAAAA,WAAP,CAAmBC,KAAnB,EAA2CC,OAA3C,EAAqG;AACjG,UAAMD,KAAN;;AADiG;;AAEjG,SAAKC,OAAL,GAAeA,OAAf;;AACA,QAAG,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxB,KAA+BC,SAAlC,EAA6C;AACzC,WAAKC,KAAL,GAAa;AACT;AACAC,QAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC;AAFzB,OAAb;AAIH,KALD,MAKO;AACH,WAAKE,KAAL,GAAa;AACT;AACAC,QAAAA,QAAQ,EAAE;AAFD,OAAb;AAIH;AACJ;;AAEMC,EAAAA,MAAP,GAAiC;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACA,WACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAG,KAAKM,KAAL,CAAWC,QAAX,IAAuB,EAAvB,GAA4B,mBAA5B,GAAkDX,GAAG,CAACe,QAAJ,CAAa,mBAAb,IAAoC,KAAKL,KAAL,CAAWC,QAAtH;AACa,MAAA,YAAY,EAAG,KAAKD,KAAL,CAAWC,QAAX,IAAuB,EAAvB,GAA4B,EAA5B,GAAiCX,GAAG,CAACe,QAAJ,CAAa,yBAAb;AAD7D,OAEI,sEAFJ,CADJ;AAMH;;AA7B+E;;gBAAvEd,Y,iBACYJ,qB;;AA+BzB,OAAO,MAAMmB,gBAAgB,GAAGjB,UAAU,CAACE,YAAD,CAAnC","sourcesContent":["import * as React from \"react\";\r\nimport {AccountServiceContext} from \"../../account-service/AccountServiceContext\";\r\nimport {ContentPage} from \"../ContentPage\";\r\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\r\nimport {Msg} from \"../../widgets/Msg\";\r\n\r\ninterface routeParams {\r\n    id: string;\r\n}\r\nexport interface ManagePageProps extends RouteComponentProps<routeParams> {\r\n}\r\n\r\nexport interface ManagePageState {\r\n    // isRowOpen already here for later use and expanding the list of clients\r\n    // isExtended: boolean[];\r\n    clientId: string;\r\n}\r\n\r\nexport class ManageClient extends React.Component<ManagePageProps, ManagePageState> {\r\n    static contextType = AccountServiceContext;\r\n    context: React.ContextType<typeof AccountServiceContext>;\r\n\r\n\r\n    public constructor(props: ManagePageProps, context: React.ContextType<typeof AccountServiceContext>) {\r\n        super(props);\r\n        this.context = context;\r\n        if(this.props.match.params.id !== undefined) {\r\n            this.state = {\r\n                //isExtended: [false, false],\r\n                clientId: this.props.match.params.id\r\n            };\r\n        } else {\r\n            this.state = {\r\n                //isExtended: [],\r\n                clientId: ''\r\n            };\r\n        }\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        console.log(this.props);\r\n        return(\r\n            <ContentPage title={(this.state.clientId == '' ? 'Create new client' : Msg.localize(\"manageClientTitle\") + this.state.clientId)}\r\n                         introMessage={(this.state.clientId == '' ? '' : Msg.localize(\"manageClientDescription\"))}>\r\n                <h1>This is a test if anything is shown</h1>\r\n            </ContentPage>\r\n        );\r\n    }\r\n\r\n}\r\nexport const ManageClientPage = withRouter(ManageClient);"],"file":"ManageClientPage.js"}